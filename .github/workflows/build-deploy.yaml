name: Bild and Deploy Code

on: [push, pull_request]
#  push:
#    branches:
#      - "main"
#  pull_request:
#    branches:
#      - "test_branch"
jobs:
  build:
    environment:
      name: testing
    env:
      DB_PORT: ${{secrets.DB_PORT}}
      DB_HOST: ${{secrets.DB_HOST}}
      DB_USER: ${{secrets.DB_USER}}
      DB_PASS: ${{secrets.DB_PASS}}
      DB_NAME: ${{secrets.DB_NAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{secrets.DB_USER}}
          POSTGRES_PASSWORD: ${{secrets.DB_PASS}}
          POSTGRES_DB: test_${{secrets.DB_NAME}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v4
      - name: install python version 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: update pip
        run: python3 -m pip install --upgrade pip
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: run tests
        run: |
          pip install pytest
          pytest

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Cache Docker layers
#        uses: actions/cache@v4
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and push
#        uses: docker/build-push-action@v6
#        with:
#          context: ./
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi:latest
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production
    steps:
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.PROD_HOST }} >> ~/.ssh/known_hosts
      - name: deploy on ubuntu server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd app/src
            git pull
            sudo systemctl restart api

